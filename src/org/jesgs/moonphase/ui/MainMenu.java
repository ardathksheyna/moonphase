package org.jesgs.moonphase.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.EventQueue;
import javax.swing.JFrame;

/**
 *
 * @author Jess Green <jgreen@periscope.com>
 */
public class MainMenu extends JFrame implements ActionListener {

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        componentEvents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbMoonAge = new javax.swing.JButton();
        jbCalendar = new javax.swing.JButton();
        jbChart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/jesgs/moonphase/ui/Bundle"); // NOI18N
        jbMoonAge.setText(bundle.getString("MainMenu.jbMoonAge")); // NOI18N
        jbMoonAge.setActionCommand("getMoonAge");

        jbCalendar.setText(bundle.getString("MainMenu.jbCalendar")); // NOI18N
        jbCalendar.setActionCommand("getCalendar");

        jbChart.setText(bundle.getString("MainMenu.jbChart")); // NOI18N
        jbChart.setActionCommand("getDistance");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(46, 46, 46)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jbChart)
                    .add(jbCalendar)
                    .add(jbMoonAge))
                .addContainerGap(177, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(48, 48, 48)
                .add(jbMoonAge)
                .add(18, 18, 18)
                .add(jbCalendar)
                .add(18, 18, 18)
                .add(jbChart)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        jbMoonAge.getAccessibleContext().setAccessibleName(bundle.getString("MainMenu.jbMoonAge")); // NOI18N
        jbCalendar.getAccessibleContext().setAccessibleName(bundle.getString("MainMenu.jbCalendar")); // NOI18N
        jbChart.getAccessibleContext().setAccessibleName(bundle.getString("MainMenu.jbChart")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void componentEvents() {
        jbCalendar.addActionListener(this);
        jbChart.addActionListener(this);
        jbMoonAge.addActionListener(this);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCalendar;
    private javax.swing.JButton jbChart;
    private javax.swing.JButton jbMoonAge;
    // End of variables declaration//GEN-END:variables

    private ButtonCommands buttonCommandsMap = new ButtonCommands();

    @Override
    public void actionPerformed(ActionEvent ae) {
        String command = ae.getActionCommand();
        int commandId  = buttonCommandsMap.getCommandId(command);

        switch (commandId) {
            case ButtonCommands.FRAME_MOON_AGE :
                EventQueue.invokeLater(new Runnable(){
                    @Override
                    public void run() {
                        new CurrentAgeFrame().setVisible(true);
                    }
                });
                break;

            case ButtonCommands.FRAME_CALENDAR :
                break;

            case ButtonCommands.FRAME_CHART :
                break;

            default:
                break;
        }
    }
}
