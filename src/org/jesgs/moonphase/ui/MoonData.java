package org.jesgs.moonphase.ui;

import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.ResourceBundle;
import javax.swing.JPanel;
import javax.swing.JLabel;
import org.jesgs.moonphase.MoonDataItem;
import org.jesgs.moonphase.MoonFx;
import org.jesgs.moonphase.MoonObserver;


/**
 *
 * @author Jess Green <jgreen@periscope.com>
 */
public class MoonData extends JPanel implements MoonObserver {


    /**
     * Moon data collection array
     */
    private ArrayList<MoonDataItem> moonData;


    /**
     * Config data
     */
    private ResourceBundle bundle = ResourceBundle.getBundle("org/jesgs/moonphase/ui/Bundle");


    /**
     * Instance of MoonFx
     */
    final private MoonFx moonFx;


    /**
     * Creates new form MoonData
     *
     * @param moonFx
     */
    public MoonData(MoonFx moonFx) {
        this.moonData = new ArrayList<MoonDataItem>();
        this.moonFx   = moonFx;

        populateArrayList();
        initComponents();
    }


    /**
     * Notify observers of update
     * @return void
     */
    @Override
    public void update() {
        moonData.clear();
        removeAll();
        populateArrayList();
        repaint();
    }


    /**
     * Populate collection
     *
     * @return void
     */
    private void populateArrayList()
    {
        String longDateFormat = bundle.getString("CurrentAgeFrame.currentDateLongFormat"),
               timeFormat     = bundle.getString("CurrentAgeFrame.timeFormat"),
               milesFormat    = bundle.getString("CurrentAgeFrame.milesFormat");

        SimpleDateFormat sdf  = new SimpleDateFormat(longDateFormat);
        DecimalFormat df      = new DecimalFormat();
        double synodicAge = moonFx.getSynodicPhase(),
               julianDate = moonFx.getJulianDate();

        String phaseName = MoonPhaseNames.getPhaseName(synodicAge);
        Date date = moonFx.getDate();

        // current date and moonphase name
        moonData.add(new MoonDataItem("Current Date: ", sdf.format(date.getTime())));
        moonData.add(new MoonDataItem("Current Phase: ", phaseName));

        moonData.add(new MoonDataItem("Julian Date: ", Double.toString(julianDate)));
        moonData.add(new MoonDataItem("Moon's Age: ", Double.toString(Math.round(synodicAge)) + " days since New Moon"));
        moonData.add(new MoonDataItem("Angle: ", Double.toString(Math.round(moonFx.getPhaseAngle(synodicAge)))));
        moonData.add(new MoonDataItem("Percent Illuminated: ", Math.round(moonFx.getIlluminatedRatio(synodicAge) * 100) + "%"));

        setupLabels();
    }


    /**
     * Create and position labels
     *
     * @return void
     */
    private void setupLabels()
    {
        // two labels (label/value)
        Iterator moonDataIt = moonData.iterator();

        int vPlacement = 10;

        while(moonDataIt.hasNext()) {
            Object element = moonDataIt.next();
            MoonDataItem data = (MoonDataItem) element;
            String label = data.getLabel(),
                   value = data.getValue();

            JLabel jlabelLabel = new JLabel();
            JLabel jlabelValue = new JLabel();

            jlabelLabel.setText(label);
            jlabelLabel.setBounds(10, vPlacement, 150, 20);
            jlabelValue.setText(value);
            jlabelValue.setBounds(150, vPlacement, 400, 20);

            add(jlabelLabel);
            add(jlabelValue);

            vPlacement = vPlacement + 20;
        }

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
